// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using fnoonasiaclub.Data;

namespace fnoonasiaclub.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.AladaNadiWaiting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddAnotherGame")
                        .HasColumnName("Add_another_game")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Cellphone")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Cellphone2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("DateBirth")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("Datetime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("datetime")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DurationAnotherGame")
                        .HasColumnName("duration_another_game")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("DurationMonth")
                        .HasColumnName("duration_month")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Game")
                        .HasColumnName("game")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("GuardianWork")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Identification")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<byte[]>("ImageTransfer")
                        .HasColumnName("image_transfer")
                        .HasColumnType("image");

                    b.Property<string>("NameA")
                        .HasColumnName("Name_A")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Place")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("AladaNadiWaiting");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.Alhwodor", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("int");

                    b.Property<int>("Idplay")
                        .HasColumnName("IDplay")
                        .HasColumnType("int");

                    b.Property<int>("Iid")
                        .HasColumnName("IID")
                        .HasColumnType("int");

                    b.Property<string>("Place")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("DateM")
                        .HasColumnName("dateM")
                        .HasColumnType("datetime");

                    b.Property<int?>("Alhesah")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FormN")
                        .HasColumnName("formN")
                        .HasColumnType("datetime");

                    b.Property<int?>("Idmostow")
                        .HasColumnName("IDmostow")
                        .HasColumnType("int");

                    b.Property<int?>("Idmovement")
                        .HasColumnName("IDmovement")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NumberExercises")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<DateTime?>("RecordingTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Taweeth")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("taweeth")
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<long?>("Tcheck")
                        .HasColumnName("tcheck")
                        .HasColumnType("bigint");

                    b.Property<long?>("TcheckK")
                        .HasColumnName("tcheckK")
                        .HasColumnType("bigint");

                    b.Property<int?>("TmareenMotabake")
                        .HasColumnName("tmareenMotabake")
                        .HasColumnType("int");

                    b.Property<string>("ToDay")
                        .HasColumnName("toDay")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ToT")
                        .HasColumnName("toT")
                        .HasColumnType("datetime");

                    b.Property<string>("UserName")
                        .HasColumnName("userName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id", "Idplay", "Iid", "Place", "DateM");

                    b.ToTable("Alhwodor");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.Almosthdmeen", b =>
                {
                    b.Property<bool?>("Mos")
                        .HasColumnName("mos")
                        .HasColumnType("bit");

                    b.Property<string>("NameKaml")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool?>("Oma")
                        .HasColumnName("oma")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool?>("Tak")
                        .HasColumnName("tak")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.ToTable("Almosthdmeen");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.HarkatAadaWaiting", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnName("date")
                        .HasColumnType("date");

                    b.Property<string>("DurationMonths")
                        .HasColumnName("duration_months")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Feetype")
                        .HasColumnName("feetype")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Game")
                        .HasColumnName("game")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("IidAladaNadi")
                        .HasColumnName("IID_Alada_Nadi")
                        .HasColumnType("int");

                    b.Property<byte[]>("ImageTransfer")
                        .HasColumnName("image_transfer")
                        .HasColumnType("image");

                    b.Property<string>("NamePlayer")
                        .HasColumnName("name_player")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Place")
                        .HasColumnName("place")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("HarkatAadaWaiting");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.ShehdatEtehad", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("int");

                    b.Property<string>("Alhezam")
                        .HasColumnName("alhezam")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<DateTime?>("DateDay")
                        .HasColumnName("dateDay")
                        .HasColumnType("datetime");

                    b.Property<string>("DateM")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int?>("Iid")
                        .HasColumnName("IID")
                        .HasColumnType("int");

                    b.Property<string>("Masdrha")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NamePlay")
                        .HasColumnName("namePlay")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("Notes")
                        .HasColumnName("notes")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("NumMsave")
                        .HasColumnName("numMsave")
                        .HasColumnType("int");

                    b.Property<int?>("NumShehada")
                        .HasColumnName("numShehada")
                        .HasColumnType("int");

                    b.Property<string>("Place")
                        .HasColumnName("place")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<DateTime?>("TimeDay")
                        .HasColumnName("timeDay")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("ShehdatEtehad");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TbAdvert", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("int");

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Dh")
                        .HasColumnName("dh")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Dhh")
                        .HasColumnName("dhh")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("Dm")
                        .HasColumnName("dm")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Dmm")
                        .HasColumnName("dmm")
                        .HasColumnType("datetime");

                    b.Property<string>("FormHezam")
                        .HasColumnName("formHezam")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("NameMostow")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("NamePlay")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("TimeD")
                        .HasColumnName("timeD")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ToHezam")
                        .HasColumnName("toHezam")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.ToTable("Tb_Advert");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TbAdvertDetails", b =>
                {
                    b.Property<int>("Iid")
                        .HasColumnName("IID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateDay")
                        .HasColumnName("dateDay")
                        .HasColumnType("datetime");

                    b.Property<string>("Place")
                        .HasColumnName("place")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Dh")
                        .HasColumnName("dh")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Dhh")
                        .HasColumnName("dhh")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("Dm")
                        .HasColumnName("dm")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Dmm")
                        .HasColumnName("dmm")
                        .HasColumnType("datetime");

                    b.Property<int?>("FormHezam")
                        .HasColumnName("formHezam")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("int");

                    b.Property<int?>("Idplay")
                        .HasColumnName("IDplay")
                        .HasColumnType("int");

                    b.Property<string>("NameA")
                        .HasColumnName("nameA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("NameMostow")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("NamePlay")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("TimeD")
                        .HasColumnName("timeD")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("ToHezam")
                        .HasColumnName("toHezam")
                        .HasColumnType("int");

                    b.HasKey("Iid", "DateDay", "Place")
                        .HasName("PK_ELanTB");

                    b.ToTable("Tb_AdvertDetails");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TbBelt", b =>
                {
                    b.Property<int>("IdBelt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_Belt")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdPlay")
                        .HasColumnName("ID_play")
                        .HasColumnType("int");

                    b.Property<string>("NameBelt")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("IdBelt");

                    b.ToTable("Tb_Belt");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TbBranch", b =>
                {
                    b.Property<int>("BranchNo")
                        .HasColumnName("branch_no")
                        .HasColumnType("int");

                    b.Property<string>("BranchNum")
                        .HasColumnName("branch_num")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("BranchNo");

                    b.ToTable("TB_branch");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TbClass", b =>
                {
                    b.Property<int>("IdClass")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_class")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NumClass")
                        .HasColumnName("num_class")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("IdClass");

                    b.ToTable("TB_class");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TbDetails", b =>
                {
                    b.Property<int>("NumDetails")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("num_details")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Arrest")
                        .HasColumnName("arrest")
                        .HasColumnType("bit");

                    b.Property<string>("DateEnd")
                        .HasColumnName("dateEnd")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("DateStart")
                        .HasColumnName("dateStart")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int?>("IdBelt")
                        .HasColumnName("ID_Belt")
                        .HasColumnType("int");

                    b.Property<int?>("IdPlay")
                        .HasColumnName("ID_play")
                        .HasColumnType("int");

                    b.Property<int?>("IdSub")
                        .HasColumnName("ID_sub")
                        .HasColumnType("int");

                    b.Property<string>("NumClass")
                        .HasColumnName("num_class")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int?>("NumDay")
                        .HasColumnName("num_day")
                        .HasColumnType("int");

                    b.Property<int?>("NumExreises")
                        .HasColumnName("Num_exreises")
                        .HasColumnType("int");

                    b.Property<int>("RestExercises")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("restExercises")
                        .HasColumnType("int")
                        .HasComputedColumnSql("((0))");

                    b.Property<int?>("StatNo")
                        .HasColumnName("stat_no")
                        .HasColumnType("int");

                    b.Property<string>("ToDay")
                        .HasColumnName("to_day")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TxtDetails")
                        .HasColumnName("txt_details")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("UserName")
                        .HasColumnName("userName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("NumDetails");

                    b.ToTable("TB_Details");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TbGames", b =>
                {
                    b.Property<int>("IdPlay")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_play")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NamePlay")
                        .HasColumnName("namePlay")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("IdPlay");

                    b.ToTable("Tb_Games");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TbPlayer", b =>
                {
                    b.Property<int>("StatNo")
                        .HasColumnName("stat_no")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("BranchNo")
                        .HasColumnName("Branch_No")
                        .HasColumnType("int");

                    b.Property<string>("Cellphone")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Cellphone2")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("DateDay")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int?>("DurationMonth")
                        .HasColumnName("duration_month")
                        .HasColumnType("int");

                    b.Property<string>("GuardianworkNo")
                        .HasColumnName("Guardianwork_No")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("HealthStatus")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Higry")
                        .HasColumnName("higry")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Identification")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<byte[]>("ImagePlayer")
                        .HasColumnName("image_player")
                        .HasColumnType("image");

                    b.Property<string>("NameA")
                        .HasColumnName("Name_A")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("NameE")
                        .HasColumnName("name_E")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("NameplayNo")
                        .HasColumnName("Nameplay_No")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("NationalityNo")
                        .HasColumnName("Nationality_No")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int?>("OldId")
                        .HasColumnName("old_ID")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PlayerEmail")
                        .HasColumnName("Player_Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("StatNo");

                    b.HasIndex("BranchNo");

                    b.ToTable("TbPlayer");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TbSubscition", b =>
                {
                    b.Property<int>("IdSub")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_sub")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameSub")
                        .HasColumnName("Name_sub")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int?>("NumDay")
                        .HasColumnName("num_day")
                        .HasColumnType("int");

                    b.Property<int?>("NumExreises")
                        .HasColumnName("Num_exreises")
                        .HasColumnType("int");

                    b.HasKey("IdSub");

                    b.ToTable("tb_subscition");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TbUserName", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnName("userName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("FullName")
                        .HasColumnName("fullName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("IdBranch")
                        .HasColumnName("ID_branch")
                        .HasColumnType("int");

                    b.Property<string>("Psw")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("UserName");

                    b.ToTable("tb_UserName");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TblAccReport", b =>
                {
                    b.Property<int>("AccRepNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("acc_Rep_No")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccRepAname")
                        .HasColumnName("acc_Rep_Aname")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("AccRepEname")
                        .HasColumnName("acc_Rep_Ename")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("AccRepNo")
                        .HasName("PK_tbl_Report");

                    b.ToTable("tbl_Acc_Report");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TblAccTypes", b =>
                {
                    b.Property<int>("AccTypeNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("acc_Type_No")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccTypeAname")
                        .HasColumnName("acc_Type_Aname")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("AccTypeEname")
                        .HasColumnName("acc_Type_Ename")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("AccTypeNo");

                    b.ToTable("tbl_Acc_Types");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TblAccounts", b =>
                {
                    b.Property<int>("AccNo")
                        .HasColumnName("acc_No")
                        .HasColumnType("int");

                    b.Property<string>("AccAname")
                        .HasColumnName("acc_Aname")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<decimal?>("AccBalance")
                        .HasColumnName("acc_Balance")
                        .HasColumnType("money");

                    b.Property<decimal?>("AccCredit")
                        .HasColumnName("acc_Credit")
                        .HasColumnType("money");

                    b.Property<decimal?>("AccDebit")
                        .HasColumnName("acc_Debit")
                        .HasColumnType("money");

                    b.Property<int?>("AccLevel")
                        .HasColumnName("acc_Level")
                        .HasColumnType("int");

                    b.Property<int?>("AccParentNo")
                        .HasColumnName("acc_Parent_No")
                        .HasColumnType("int");

                    b.Property<int?>("AccReport")
                        .HasColumnName("acc_Report")
                        .HasColumnType("int");

                    b.Property<int?>("AccType")
                        .HasColumnName("acc_Type")
                        .HasColumnType("int");

                    b.HasKey("AccNo")
                        .HasName("PK_tbl_Account");

                    b.ToTable("tbl_Accounts");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TblBank", b =>
                {
                    b.Property<int>("BAccNo")
                        .HasColumnName("b_acc_No")
                        .HasColumnType("int");

                    b.Property<string>("BAccName")
                        .IsRequired()
                        .HasColumnName("b_acc_Name")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("BAccNo");

                    b.ToTable("tbl_Bank");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TblBondDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccNo")
                        .HasColumnName("acc_No")
                        .HasColumnType("int");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money");

                    b.Property<int?>("BCurr")
                        .HasColumnName("b_Curr")
                        .HasColumnType("int");

                    b.Property<int?>("BNo")
                        .HasColumnName("b_No")
                        .HasColumnType("int");

                    b.Property<string>("BNote")
                        .HasColumnName("b_Note")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("CurrExch")
                        .HasColumnName("curr_exch")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("BNo");

                    b.ToTable("tbl_Bond_Details");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TblBondHdr", b =>
                {
                    b.Property<int>("BNo")
                        .HasColumnName("b_No")
                        .HasColumnType("int");

                    b.Property<decimal?>("AccBalance")
                        .HasColumnName("acc_Balance")
                        .HasColumnType("money");

                    b.Property<int?>("AccBankNo")
                        .HasColumnName("acc_Bank_No")
                        .HasColumnType("int");

                    b.Property<int?>("AccCashNo")
                        .HasColumnName("acc_Cash_No")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AddDate")
                        .HasColumnName("add_Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("BDate")
                        .HasColumnName("b_Date")
                        .HasColumnType("datetime");

                    b.Property<string>("BNote")
                        .HasColumnName("b_Note")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("BPost")
                        .HasColumnName("b_Post")
                        .HasColumnType("int");

                    b.Property<int?>("BType")
                        .HasColumnName("b_Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnName("edit_date")
                        .HasColumnType("datetime");

                    b.Property<int?>("JNo")
                        .HasColumnName("j_no")
                        .HasColumnType("int");

                    b.Property<int?>("UAdd")
                        .HasColumnName("u_Add")
                        .HasColumnType("int");

                    b.Property<int?>("UEdit")
                        .HasColumnName("u_Edit")
                        .HasColumnType("int");

                    b.HasKey("BNo");

                    b.ToTable("tbl_Bond_HDR");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TblBondTypes", b =>
                {
                    b.Property<int>("BndTypeNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("bnd_Type_No")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BndTypeAname")
                        .HasColumnName("bnd_Type_Aname")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("BndTypeEname")
                        .HasColumnName("bnd_Type_Ename")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("BndTypeNo");

                    b.ToTable("tbl_Bond_Types");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TblCash", b =>
                {
                    b.Property<int>("CAccNo")
                        .HasColumnName("c_acc_No")
                        .HasColumnType("int");

                    b.Property<string>("CAccName")
                        .IsRequired()
                        .HasColumnName("c_acc_Name")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("CAccNo");

                    b.ToTable("tbl_Cash");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TblCategories", b =>
                {
                    b.Property<int>("IdCat")
                        .HasColumnName("ID_cat")
                        .HasColumnType("int");

                    b.Property<string>("DescriptionCat")
                        .HasColumnName("description_cat")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("IdCat")
                        .HasName("PK_tbl_Category");

                    b.ToTable("tbl_Categories");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TblCompany", b =>
                {
                    b.Property<int>("CNo")
                        .HasColumnName("c_No")
                        .HasColumnType("int");

                    b.Property<string>("CAname")
                        .IsRequired()
                        .HasColumnName("c_Aname")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("CApos")
                        .IsRequired()
                        .HasColumnName("c_Apos")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("CEmail")
                        .HasColumnName("c_Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CEname")
                        .HasColumnName("c_Ename")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("CEpos")
                        .HasColumnName("c_Epos")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("CFax")
                        .HasColumnName("c_Fax")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<byte[]>("CLogo")
                        .HasColumnName("c_Logo")
                        .HasColumnType("image");

                    b.Property<string>("CTel")
                        .IsRequired()
                        .HasColumnName("c_Tel")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CWebsite")
                        .HasColumnName("c_Website")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("CNo");

                    b.ToTable("tbl_Company");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TblCurrTypes", b =>
                {
                    b.Property<int>("CurrTypeNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("curr_Type_No")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CurrTypeAname")
                        .HasColumnName("curr_Type_Aname")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("CurrTypeEname")
                        .HasColumnName("curr_Type_Ename")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("CurrTypeNo");

                    b.ToTable("tbl_Curr_Types");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TblCurrencies", b =>
                {
                    b.Property<int>("CurrNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("curr_No")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CurrEname")
                        .HasColumnName("curr_Ename")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("CurrExch")
                        .HasColumnName("curr_Exch")
                        .HasColumnType("money");

                    b.Property<string>("CurrName")
                        .IsRequired()
                        .HasColumnName("curr_Name")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CurrPart")
                        .IsRequired()
                        .HasColumnName("curr_Part")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CurrSymbol")
                        .IsRequired()
                        .HasColumnName("curr_Symbol")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<int?>("CurrType")
                        .HasColumnName("curr_Type")
                        .HasColumnType("int");

                    b.HasKey("CurrNo")
                        .HasName("PK_tbl_Currences");

                    b.ToTable("tbl_Currencies");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TblJTypes", b =>
                {
                    b.Property<int>("JtypeNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Jtype_No")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("JtypeAname")
                        .HasColumnName("Jtype_Aname")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("JtypeEname")
                        .HasColumnName("Jtype_Ename")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("JtypeNo");

                    b.ToTable("tbl_jTypes");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TblJournalDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AccCredit")
                        .HasColumnName("acc_Credit")
                        .HasColumnType("money");

                    b.Property<decimal?>("AccDebit")
                        .HasColumnName("acc_Debit")
                        .HasColumnType("money");

                    b.Property<int?>("AccNo")
                        .HasColumnName("acc_No")
                        .HasColumnType("int");

                    b.Property<string>("AccNote")
                        .HasColumnName("acc_Note")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("JNo")
                        .HasColumnName("j_No")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JNo");

                    b.ToTable("tbl_Journal_Details");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TblJournalHdr", b =>
                {
                    b.Property<int>("JNo")
                        .HasColumnName("j_No")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AddDate")
                        .HasColumnName("add_Date")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("CurrExch")
                        .HasColumnName("curr_exch")
                        .HasColumnType("money");

                    b.Property<int?>("CurrNo")
                        .HasColumnName("curr_no")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnName("edit_date")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("JDate")
                        .HasColumnName("j_Date")
                        .HasColumnType("datetime");

                    b.Property<string>("JNote")
                        .IsRequired()
                        .HasColumnName("j_Note")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("JPost")
                        .HasColumnName("j_Post")
                        .HasColumnType("int");

                    b.Property<int>("JType")
                        .HasColumnName("j_Type")
                        .HasColumnType("int");

                    b.Property<int?>("PNo")
                        .HasColumnName("p_no")
                        .HasColumnType("int");

                    b.Property<decimal>("TBalance")
                        .HasColumnName("t_Balance")
                        .HasColumnType("money");

                    b.Property<decimal>("TCredit")
                        .HasColumnName("t_Credit")
                        .HasColumnType("money");

                    b.Property<decimal>("TDebit")
                        .HasColumnName("t_Debit")
                        .HasColumnType("money");

                    b.Property<int?>("UAdd")
                        .HasColumnName("u_Add")
                        .HasColumnType("int");

                    b.Property<int?>("UEdit")
                        .HasColumnName("u_Edit")
                        .HasColumnType("int");

                    b.HasKey("JNo");

                    b.ToTable("tbl_Journal_HDR");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TblKarateCertificate", b =>
                {
                    b.Property<DateTime?>("DateRegister")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_register")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("KrtBirthday")
                        .HasColumnName("krt_birthday")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("KrtBranchAsia")
                        .HasColumnName("krt_branch_asia")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("KrtFstPhone")
                        .HasColumnName("krt_fst_phone")
                        .HasColumnType("int");

                    b.Property<string>("KrtFullNameAr")
                        .HasColumnName("krt_full_name_ar")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int>("KrtId")
                        .HasColumnName("krt_id")
                        .HasColumnType("int");

                    b.Property<string>("KrtIdentification")
                        .HasColumnName("krt_identification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("KrtImagePlayer")
                        .HasColumnName("krt_image_player")
                        .HasColumnType("image");

                    b.Property<int?>("KrtSedPhone")
                        .HasColumnName("krt_sed_phone")
                        .HasColumnType("int");

                    b.ToTable("tbl_karate_certificate");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TblOrder", b =>
                {
                    b.Property<int>("IdOrder")
                        .HasColumnName("ID_order")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOrder")
                        .HasColumnName("Date_order")
                        .HasColumnType("datetime");

                    b.Property<string>("DescriptionOrder")
                        .HasColumnName("description_order")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesMan")
                        .HasColumnName("sales_man")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("StatNoPlayer")
                        .HasColumnName("stat_no_player")
                        .HasColumnType("int");

                    b.HasKey("IdOrder");

                    b.HasIndex("StatNoPlayer");

                    b.ToTable("tbl_Order");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TblOrdersDetails", b =>
                {
                    b.Property<string>("Amount")
                        .HasColumnName("amount")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<double?>("Dicount")
                        .HasColumnName("dicount")
                        .HasColumnType("float");

                    b.Property<int?>("IdOrder")
                        .HasColumnName("ID_order")
                        .HasColumnType("int");

                    b.Property<string>("IdProduct")
                        .HasColumnName("ID_product")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Price")
                        .HasColumnName("price")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Quantity")
                        .HasColumnName("quantity")
                        .HasColumnType("int");

                    b.Property<string>("TotalAmount")
                        .HasColumnName("total_amount")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasIndex("IdOrder");

                    b.HasIndex("IdProduct");

                    b.ToTable("tbl_Orders_Details");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TblProcess", b =>
                {
                    b.Property<int>("PNo")
                        .HasColumnName("p_no")
                        .HasColumnType("int");

                    b.Property<string>("PName")
                        .HasColumnName("p_name")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("PNo");

                    b.ToTable("tbl_Process");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TblProducts", b =>
                {
                    b.Property<string>("IdProduct")
                        .HasColumnName("ID_product")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("AddProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Add_product")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("EditProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Edit_product")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<int?>("IdCat")
                        .HasColumnName("ID_cat")
                        .HasColumnType("int");

                    b.Property<byte[]>("ImageProduct")
                        .HasColumnName("Image_product")
                        .HasColumnType("image");

                    b.Property<string>("LabelProduct")
                        .HasColumnName("Label_product")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int?>("QuantityInStockProduct")
                        .HasColumnName("Quantity_inStock_product")
                        .HasColumnType("int");

                    b.HasKey("IdProduct");

                    b.HasIndex("IdCat");

                    b.ToTable("tbl_Products");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TblRegistrationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AddAnotherGame")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellphone2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Datetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DurationAnotherGame")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DurationMonth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Game")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuardianWork")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_player")
                        .HasColumnType("int");

                    b.Property<string>("Identification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ImageTransfer")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NameA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TblTaekwondoCertificate", b =>
                {
                    b.Property<int>("TwkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("twk_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateRegister")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_register")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("TwkBirthday")
                        .HasColumnName("twk_birthday")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TwkBranchAsia")
                        .HasColumnName("twk_branch_asia")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("TwkFstPhone")
                        .HasColumnName("twk_fst_phone")
                        .HasColumnType("int");

                    b.Property<string>("TwkFullNameAr")
                        .HasColumnName("twk_full_name_ar")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("TwkFullNameEn")
                        .HasColumnName("twk_full_name_en")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("TwkIdentification")
                        .HasColumnName("twk_identification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("TwkImagePlayer")
                        .HasColumnName("twk_image_player")
                        .HasColumnType("image");

                    b.Property<int?>("TwkSedPhone")
                        .HasColumnName("twk_sed_phone")
                        .HasColumnType("int");

                    b.HasKey("TwkId")
                        .HasName("PK_tbl_teakwondo_certificate");

                    b.ToTable("tbl_taekwondo_certificate");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TblUsers", b =>
                {
                    b.Property<int>("UNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("U_No")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UEmail")
                        .HasColumnName("U_Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UFname")
                        .IsRequired()
                        .HasColumnName("U_Fname")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<byte[]>("UImage")
                        .HasColumnName("U_image")
                        .HasColumnType("image");

                    b.Property<string>("UName")
                        .IsRequired()
                        .HasColumnName("U_Name")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("UPassword")
                        .IsRequired()
                        .HasColumnName("U_Password")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("UTel")
                        .HasColumnName("U_Tel")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("UNo")
                        .HasName("PK_tbl_User");

                    b.ToTable("tbl_Users");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.ToDay", b =>
                {
                    b.Property<int>("Idday")
                        .HasColumnName("IDday")
                        .HasColumnType("int");

                    b.Property<string>("ToDay1")
                        .HasColumnName("toDay")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Idday");

                    b.ToTable("ToDay");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.UserName", b =>
                {
                    b.Property<string>("UserName1")
                        .HasColumnName("userName")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("FullName")
                        .HasColumnName("fullName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("IdBranch")
                        .HasColumnName("ID_branch")
                        .HasColumnType("int");

                    b.Property<string>("Psw")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("UserName1");

                    b.ToTable("UserName");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("fnoonasiaclub.Models.TblRegistrationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("fnoonasiaclub.Models.TblRegistrationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("fnoonasiaclub.Models.TblRegistrationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("fnoonasiaclub.Models.TblRegistrationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TbPlayer", b =>
                {
                    b.HasOne("fnoonasiaclub.Models.TbBranch", "BranchNoNavigation")
                        .WithMany("TbPlayer")
                        .HasForeignKey("BranchNo")
                        .HasConstraintName("FK_TbPlayer_TB_branch");
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TblBondDetails", b =>
                {
                    b.HasOne("fnoonasiaclub.Models.TblBondHdr", "BNoNavigation")
                        .WithMany("TblBondDetails")
                        .HasForeignKey("BNo")
                        .HasConstraintName("FK_tbl_Bond_Details_tbl_Bond_HDR")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TblJournalDetails", b =>
                {
                    b.HasOne("fnoonasiaclub.Models.TblJournalHdr", "JNoNavigation")
                        .WithMany("TblJournalDetails")
                        .HasForeignKey("JNo")
                        .HasConstraintName("FK_tbl_Journal_Details_tbl_Journal_HDR")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TblOrder", b =>
                {
                    b.HasOne("fnoonasiaclub.Models.TbPlayer", "StatNoPlayerNavigation")
                        .WithMany("TblOrder")
                        .HasForeignKey("StatNoPlayer")
                        .HasConstraintName("FK_tbl_Order_TbPlayer")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TblOrdersDetails", b =>
                {
                    b.HasOne("fnoonasiaclub.Models.TblOrder", "IdOrderNavigation")
                        .WithMany()
                        .HasForeignKey("IdOrder")
                        .HasConstraintName("FK_tbl_Orders_Details_tbl_Order")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("fnoonasiaclub.Models.TblProducts", "IdProductNavigation")
                        .WithMany()
                        .HasForeignKey("IdProduct")
                        .HasConstraintName("FK_tbl_Orders_Details_tbl_Products")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("fnoonasiaclub.Models.TblProducts", b =>
                {
                    b.HasOne("fnoonasiaclub.Models.TblCategories", "IdCatNavigation")
                        .WithMany("TblProducts")
                        .HasForeignKey("IdCat")
                        .HasConstraintName("FK_tbl_Products_tbl_Categories")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
